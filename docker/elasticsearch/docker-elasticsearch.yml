version: "3"
services:
    es:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
        # container_name 설정은 stack 으로 배포시에는 무시된다
        container_name: es{{.Task.Slot}}
        environment:
            - node.name={{.Node.Hostname}}
            - cluster.name=es-docker-cluster
            # incoming requests 를 위한 bind 로 여러 인터페이스에 bind 할 수 있다
            - network.bind_host=0.0.0.0
            # cluster node 간 통신을 위한 주소이다
            # 여기서는 9200 을 overlay 로 연결시켜놓았기에
            # eth0 로 9200 을 위한 인터페이스가 생성된다
            # 만약 ports: 9200:9200 같은 ingress overlay 설정을 하지 않는다면
            # eth0 의 주소를 사용해야 한다
            - network.publish_host=_eth1:ipv4_
            # 통신 가능한 다른 Node 들의 주소가 들어가야한다
            # 여기서는 es 라는 서비스이름을 바탕으로 각 Task 들을 설정한다
            - discovery.seed_hosts=tasks.es
            # 여기서는 모든 Node 를 Master 로 사용할 것이므로 모두 넣는다
            - cluster.initial_master_nodes=Node1,Node3,Node5
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - data:/usr/share/elasticsearch/data
            # Host 와 동일한 시간대를 사용하기 위해서 localtime 파일을 공유한다
            - /etc/localtime:/etc/localtime:ro
        ports:
            # API 를 위한 포트로 ingress 를 통해 모든 Node 가 listen 하기 위함
            - 9200:9200
        deploy:
            mode: global # Will be deployed to all nodes that match constraint, once per node
            placement:
                # elasticsearch Node 로 사용할 Node 에는 아래 label 을 설정해라
                constraints: [node.labels.es == 1]
        networks:
            - elastic
volumes:
    data:
        driver: local

networks:
    elastic:
