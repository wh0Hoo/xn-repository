version: "3.9"
services:
    es:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
        # container_name 설정은 stack 으로 배포시에는 무시된다
        container_name: es{{.Task.Slot}}
        environment:
            - "TZ=Asia/Seoul"
            # {{.Node.Hostname}} 대신 {{.Task.Slot}} 를 사용하는 것은
            # compose 파일이 아닌 다른 영향을 줄이기 위함이다
            - node.name=es{{.Task.Slot}}
            - cluster.name=es-docker-cluster
            # incoming requests 를 위한 bind 로 여러 인터페이스에 bind 할 수 있다
            - network.bind_host=0.0.0.0
            # cluster node 간 통신을 위한 주소이다
            # 여기서는 9200 을 overlay 로 연결시켜놓았기에
            # eth0 로 9200 을 위한 인터페이스가 생성된다
            # 만약 ports: 9200:9200 같은 ingress overlay 설정을 하지 않는다면
            # eth0 의 주소를 사용해야 한다
            - network.publish_host=_eth1:ipv4_
            # 통신 가능한 다른 Node 들의 주소가 들어가야한다
            # 여기서는 es 라는 서비스이름을 바탕으로 각 Task 들을 설정한다
            - discovery.seed_hosts=tasks.es
            # Master 로 사용할 Task 들에 설정된 node.name 값을 넣어야한다
            # 여기서는 모든 Node 를 Master 로 사용할 것이므로 모두 넣는다
            # 위 node.name 으로 설정한 es{{.Task.Slot}} 를 예측할 수 있다
            # replicas: 3 설정으로 es1 ~ es3 까지 생성됨을 알수있다
            - cluster.initial_master_nodes=es1,es2,es3
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - esdata:/usr/share/elasticsearch/data
        ports:
            # API 를 위한 포트로 ingress 를 통해 모든 Node 가 listen 하기 위함
            - 9200:9200
        deploy:
            mode: replicated
            replicas: 3
            placement:
                # elasticsearch Node 로 사용할 Node 에는 아래 label 을 설정해라
                constraints: [node.labels.es == 1]
                # Node 당 실행되는 task 수를 제한한다
                max_replicas_per_node: 1
        networks:
            - elastic
    mariadb:
        image: mariadb:10.5.10-focal
        # container_name: mariadb
        hostname: "mariadb{{.Task.Slot}}"
        ports:
            - "3306:3306"
        environment:
            TZ: "Asia/Seoul"
            WSREP_NODE_NAME: "mariadb{{.Task.Slot}}"
            SWARM_PEERS: "tasks.{{.Service.Name}}"
            MYSQL_ROOT_PASSWORD: "test"
        command:
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
        volumes:
            - ~/data/mariadb:/var/lib/mysql 
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.role == manager]
                max_replicas_per_node: 1
        networks:
            gcomm:
                ipv4_address: '10.0.8.1{{.Task.Slot}}'

volumes:
    esdata:
        driver: local
    mysql:
        name: 'mysql{{.Task.Slot}}'
        driver: local

networks:
    elastic:
    gcomm:
        ipam:
            config:
                - subnet: 10.0.8.0/24
